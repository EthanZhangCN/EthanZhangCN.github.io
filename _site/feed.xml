<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    
    <title>Ethan's Blog</title>
    
    
    <description>This website is a virtual proof that I'm awesome</description>
    
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
    
      <item>
        <title>光线传播模型</title>
        <description>
          NeRF中体素渲染方程推导 - 
          光线模型 Optical Models for Direct Volume Rendering 1 光线纯吸收模型 假设一个截面积为$E$ 厚度为$\Delta_s$的圆柱体介质，由N个大小均等半径为$r$的小球颗粒组成，小球颗粒投影面积$A=\pi r^2$，单位体积的颗粒数量为$\rho$，则有$NA = \rho AE \Delta_s$，假设所有的光线打到小球颗粒上都被吸收没有反射与折射，光线在圆柱截面单位面积阻挡率为（不透明度）$\frac{NA}{E}= \rho A \Delta_s$。 当$\Delta_s$无限小时，可以认为小球颗粒没有重叠，沿圆柱厚度s积分，就可以得到微分方程 ,为了区分其它模型此处光强用$I_u$表示, 光通过截面$ds$被吸收量： \[\frac{dI_u}{ds}=-\rho(s)AI_u(s)=- \tau(s)I_u(s) ----（1）\] 微分方程含义：光线穿过厚度为$ds$截面,穿过该截面后的剩余光强$dI_u$，穿过该截面前的照射光强$I_u(s)$，颗粒在该截面的投影面积$\rho(s)A$, 解以上微分方程（1），具体参考“一阶线性非齐次微分方程”，可以得到： \[I_u(s) = I_{u0} e^{(-\int_0^s{\tau(t)dt})}----(2)\] 方程（2）表明光线穿透介质厚度为$s$时的光强度，当$s$为$0$时, 即未被介质吸收, 光强为初始光强$I_{u0}$ 2 光线纯发射模型 假设上述模型中的小球完全透明，不吸收光，但是可以反射光。单位投影面积上发光强度为$C$，则圆柱体截面总发光强度为$NCA = \rho CAE \Delta_s$，圆柱截面单位面积发光强度为$\frac{NCA}{E}= \rho CA \Delta_s$。当$\Delta_s$无限小时，可以得到微分方程，光强用$I_v$表示： \[\frac{dI_v}{ds}=\rho(s)AC(s)=C(s) \tau(s) =g(s)----（3）\] 微分方程含义：在厚度为$ds$的截面上的发光量为$dI_v$, 该截面上发光颗粒的面积$\rho(s)A$，单位颗粒面积发光强度$C(s)$ 解以上微分方程(3)可以得到：...
        </description>
        <pubDate>Mon, 20 Jun 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2022-06-20-NeRF/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-06-20-NeRF/</guid>
      </item>
    
      <item>
        <title>git use logs</title>
        <description>
          -- - 
          BFG tool to simplify .git repo download page https://rtyley.github.io/bfg-repo-cleaner/ usage: java -jar bfg-1.14.0.jar -b 2M mmagnn/.git if protected commits append the command –no-blob-protection java -jar bfg-1.14.0.jar -b 2M mmagnn/.git –no-blob-protection git large file manage &amp;gt;查找大于100M的文件 find . -type f -size +100M &amp;gt;标记为大文件管理 git lfs track &quot;./xxx.zip&quot; &amp;gt;追踪大文件管理记录 git add .gitattributes...
        </description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2022-04-14-git-use-log/</link>
        <guid isPermaLink="true">http://localhost:4000/2022-04-14-git-use-log/</guid>
      </item>
    
  </channel>
</rss>
